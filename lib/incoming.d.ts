import Controller from "./controller";
declare class Incoming {
    _controller: Controller;
    _dataQueue: string[];
    _emitQueue: any[];
    constructor(controller: Controller);
    _ACCT_DOWNLOAD_END(): void;
    _ACCOUNT_SUMMARY(): void;
    _ACCOUNT_UPDATE_MULTI_END(): void;
    _ACCOUNT_UPDATE_MULTI(): void;
    _ACCOUNT_SUMMARY_END(): void;
    _ACCT_UPDATE_TIME(): void;
    _ACCT_VALUE(): void;
    _COMMISSION_REPORT(): void;
    _BOND_CONTRACT_DATA(): void;
    _CONTRACT_DATA(): void;
    _CONTRACT_DATA_END(): void;
    _CURRENT_TIME(): void;
    _DELTA_NEUTRAL_VALIDATION(): void;
    _ERR_MSG(): void;
    _EXECUTION_DATA(): void;
    _EXECUTION_DATA_END(): void;
    _FUNDAMENTAL_DATA(): void;
    _HISTORICAL_DATA(): void;
    _HEAD_TIMESTAMP(): void;
    _MANAGED_ACCTS(): void;
    _MARKET_DATA_TYPE(): void;
    _MARKET_DEPTH(): void;
    _MARKET_DEPTH_L2(): void;
    _NEWS_BULLETINS(): void;
    _NEXT_VALID_ID(): void;
    _OPEN_ORDER(): void;
    _OPEN_ORDER_END(): void;
    _ORDER_STATUS(): void;
    _PORTFOLIO_VALUE(): void;
    _POSITION(): void;
    _POSITION_END(): void;
    _POSITION_MULTI(): void;
    _POSITION_MULTI_END(): void;
    _REAL_TIME_BARS(): void;
    _RECEIVE_FA(): void;
    _SCANNER_DATA(): void;
    _SCANNER_PARAMETERS(): void;
    _SECURITY_DEFINITION_OPTION_PARAMETER(): void;
    _SECURITY_DEFINITION_OPTION_PARAMETER_END(): void;
    _TICK_EFP(): void;
    _TICK_GENERIC(): void;
    _TICK_OPTION_COMPUTATION(): void;
    _TICK_PRICE(): void;
    _TICK_SIZE(): void;
    _TICK_SNAPSHOT_END(): void;
    _TICK_STRING(): void;
    _DISPLAY_GROUP_LIST(): void;
    _DISPLAY_GROUP_UPDATED(): void;
    _emit(...args: any[]): void;
    dequeue(): string;
    dequeueBool(): boolean;
    dequeueFloat(): number;
    dequeueInt(): number;
    enqueue(tokens: any): void;
    process(): void;
}
export default Incoming;
